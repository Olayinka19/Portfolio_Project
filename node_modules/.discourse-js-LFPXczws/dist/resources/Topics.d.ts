import Discourse from '../index';
import { Topic, TopicPosts, TopicByUserName, TopicByTag, TopicByCategoryAndTag } from '../types/Topics';
import { Post } from '../types/Posts';
export declare type TopicParams = {
    id?: number;
    reverse?: boolean;
    posts?: any;
    username?: string;
    tag?: string;
    category?: number;
    subcategory?: number;
};
export interface ITopics {
    getTopic(params: TopicParams): Promise<Topic>;
    getTopicPosts(params: TopicParams): Promise<TopicPosts>;
    getTopicsByUsername(params: TopicParams): Promise<TopicByUserName>;
    getTopicsByTag(params: TopicParams): Promise<TopicByTag>;
    getTopicsByCategoryAndTag(params: TopicParams): Promise<TopicByCategoryAndTag>;
    deleteTopic(params: TopicParams): Promise<string>;
    createTopic(params: TopicParams): Promise<Post>;
}
export default function Topics(discourse: Discourse): void;
